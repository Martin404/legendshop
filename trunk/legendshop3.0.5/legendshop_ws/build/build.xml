<project name="${app.name}" default="usage">
	<property file="build.properties" />
	<property name="dist.dir" value="${tmp.dir}/dist" />
	<property name="war.file" value="${dist.dir}/${app.name}.war" />
	<property name="ear.file" value="${dist.dir}/${app.name}.ear" />
	<property name="jar.name" value="${release.root}/${app.name}.jar" />
	<property name="dest.dir" value="../${web.name}" />

	<path id="base.path">
			<fileset dir="${javalib}">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="${tomcat.home}/lib">
				<include name="*.jar" />
			</fileset>
		</path>
	<path id="ant.classpath">
		<fileset dir="../antlib">
			<include name="*.jar" />
		</fileset>
	</path>
	<!-- ===================================
				 显示可选任务，并按用户的选择执行任务
				 ==================================== -->
		<target name="usage" description="显示可选任务">
			<echo message="${app.name} Build 文件"/>
			<echo message="------------------------------------------------------"/>
			<echo message="可选Target:"/>
			<echo message=""/>
			<echo message="compile      --&gt; 编译系统并拷贝相应的属性文件"/>
			<echo message="clean        --&gt; 清除文件"/>
			<echo message="war          --&gt; 生成项目war文件"/>
			<echo message="jar          --&gt; 编译客户端jar包"/>
			<echo message="deploy       --&gt; 部署应用到应用服务器,开发时使用"/>
			<echo message="upgrade      --&gt; 代码有改动则重新部署,只是部署更改的文件"/>
			<echo message="deployServer --&gt; 部署应用到生产环境应用服务器"/>
			<input message="请选择一个Target"
				   validargs="compile,clean,war,jar,deploy,upgrade,deployServer"
				   addproperty="ant.task"/>
			<antcall target="${ant.task}"/>
		</target>
	<!-- Print's out the project help -->
	<target name="help">
		<java fork="no" classname="org.apache.tools.ant.Main">
			<arg line="-projecthelp" />
		</java>
	</target>
	<!-- 系统初始化 -->
	<target name="init">
		<echo>系统初始化,建立相应的目录</echo>
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${class.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>
	
	<!-- 清除文件 -->
	<target name="clean" description="Deletes the build and distribution directories">
		<delete dir="${dist.dir}" />
		<delete dir="${class.dir}" />
		<delete dir="${webapps.home}/${app.name}" />	
	</target>
	
	<!-- 检查环境 -->
	<target name="check-env">
		<echo>检查JDK版本为1.6</echo>
		<fail message="Must Set the JAVA_HOME to JDK1.6">
			<condition>
				<not>
					<equals arg1="${ant.java.version}" arg2="1.6"/>
				</not>
			</condition>
		</fail>
	</target>
	 <!--   编译系统并拷贝相应的属性文件 -->
	<target name="compile" depends="check-env,init" description="mkdir and compile file into class.dir">
		<echo>从${src.dir}编译代码到目录${class.dir}并拷贝相关的属性文件</echo>
		<javac srcdir="${src.dir}" destdir="${class.dir}" encoding="utf-8" debug="on" source="1.5">
			<classpath refid="base.path" />
		</javac>
		<!-- 拷贝代码目录下的属性文件 -->
		<copy todir="${class.dir}" preservelastmodified="true">
			<!--
			<fileset dir="${src.dir}/java" includes="**/*.xml" />
			<fileset dir="${src.dir}/java" includes="**/*.properties" />
			<fileset dir="${src.dir}/resource" includes="**/*.*" />
			-->
			<fileset dir="${src.dir}" includes="${config_file.type}" />
			
		</copy>
		<!-- 拷贝resource目录下的属性文件 -->
		<copy todir="${class.dir}" preservelastmodified="true">
			<fileset dir="${resource.dir}" includes="**/*" />
		</copy>
	</target>
	
	<!--编译客户端包  -->
	<target name="jar" depends="compile" description="--> tarapp_client">
		<echo>编译客户端jar包：${jar.name} </echo>
		<jar destfile="${jar.name}">
			<fileset dir="${class.dir}" includes="bingo/mcs/service/sms/format/**/*.class"/>
			<fileset dir="${class.dir}" includes="bingo/vasms/send/business/common/**/*.class"/>
		</jar>
	</target>
	
	<!--编译客户端包  -->
	<target name="jar-client" depends="compile" description="--> tarapp_client">
		<echo>编译客户端jar包：${jar.name} </echo>
		<jar destfile="../release/legendshop_ws_client.jar">
			<fileset dir="${class.dir}" includes="com/legendshop/ws/service/**/*.class" />
		</jar>
	</target>
	
	<!-- 编译war包 -->
	<target name="war" depends="jar" description="Package a standard J2EE WAR">
		<echo>编译war包:${war.file}</echo>
		<war destfile="${war.file}" compress="false" update="true" webxml="../${web.name}/WEB-INF/web.xml">
			<fileset dir="../${web.name}" excludes="**/web.xml,**/*.mex,**svn**"/>
		</war>
	</target>

	<target name="deploy" depends="compile" description="部署应用到应用服务器">
		<echo>部署应用到应用服务器 ${tomcat.home}</echo>
		<mkdir dir="${webapps.home}/${app.name}" />
		<copy todir="${webapps.home}/${app.name}" preservelastmodified="true">
			<fileset dir="${dest.dir}" includes="**/*" />
		</copy>
	</target>
	

	<target name="upgrade" description="代码有改动则重新部署,只是部署更改的文件">
		<echo>增量式重新部署应用到应用服务器 ${tomcat.home}</echo>
		<mkdir dir="${webapps.home}/${app.name}" />
		<copy todir="${webapps.home}/${app.name}" preservelastmodified="true">
			<fileset dir="${dest.dir}" includes="**/*" />
		</copy>
	</target>
	
	<!-- 备份原有系统并拷贝生产环境配置文件 -->
	<target name="backup" description="备份原有系统并拷贝生产环境配置文件">
	    <tstamp prefix="build.">
	         <format property="TimeSign" pattern="yyyy-MM-dd HH.mm.ss"/>
	    </tstamp>
		<property name="release.dir" value="${release.root}${app.name}-${build.TimeSign}" />
		<mkdir dir="${release.dir}" />
		<copy todir="${release.dir}" preservelastmodified="true" failonerror="no">
			<fileset dir="${webapps.home}/${app.name}" includes="**/*" />
		</copy>
	</target>
	
	<target name="WSDL2Java" depends="compile">
		    <mkdir dir="${client.src.dir}" />
			<java classname="org.apache.cxf.tools.wsdlto.WSDLToJava" fork="true">
			   <arg value="-client"/>
			   <arg value="-d"/>
			   <arg value="${client.src.dir}"/>
			   <arg value="${wsdl}"/>
			   <classpath>
				  <path refid="base.path"/>
			   	  <path refid="ant.classpath"/>
			   </classpath>
			</java>		
		</target>	
</project>

