<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<global-method-security pre-post-annotations="enabled">
	</global-method-security>

	<http pattern="/**/*.jpg" security="none" />
	<http pattern="/**/*.png" security="none" />
	<http pattern="/**/*.gif" security="none" />
	<http pattern="/**/*.css" security="none" />
	<http pattern="/**/*.js" security="none" />
	<http pattern="/p/login" security="none" />

	<http entry-point-ref="casProcessingFilterEntryPoint" auto-config="true">
		<intercept-url pattern="/p/**" access="ROLE_USER,ROLE_ADMIN, ROLE_SUPERVISOR" />
		<intercept-url pattern="/admin/member/**" access="ROLE_SUPERVISOR" />
		<intercept-url pattern="/admin/**" access="ROLE_ADMIN" />
		<intercept-url pattern="/plugins/system/**" access="ROLE_SYSTEM" />
		<intercept-url pattern="/**" access="ROLE_USER" />

		<logout invalidate-session="true" logout-success-url="/index" logout-url="/p/logout" delete-cookies="jforumUserInfo" />

		<session-management invalid-session-url="/p/login">
			<concurrency-control max-sessions="5" error-if-maximum-exceeded="true" />
		</session-management>

		<custom-filter ref="casProcessingFilter" after="CAS_FILTER" />
	</http>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="casAuthenticationProvider" />
	</authentication-manager>

	<beans:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties" p:service="${cas.securityContext.serviceProperties.service}"
		p:sendRenew="false" />

	<beans:bean id="casProcessingFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter"
		p:authenticationManager-ref="authenticationManager">
	</beans:bean>


	<beans:bean id="casProcessingFilterEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint"
		p:loginUrl="${cas.securityContext.casProcessingFilterEntryPoint.loginUrl}" p:serviceProperties-ref="serviceProperties" />

	<beans:bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider"
		p:key="my_password_for_this_auth_provider_only" p:serviceProperties-ref="serviceProperties" p:userDetailsService-ref="authService">
		<beans:property name="ticketValidator">
			<beans:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<beans:constructor-arg index="0" value="${cas.securityContext.ticketValidator.casServerUrlPrefix}" />
			</beans:bean>
		</beans:property>
	</beans:bean>


	<beans:bean id="authService" class="com.legendshop.business.service.impl.AuthServiceImpl">
		<beans:property name="jdbcTemplate" ref="jdbcTemplate" />
	</beans:bean>

	<!-- 使用Md5算法加密 -->
	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder">
		<beans:property name="encodeHashAsBase64" value="false"></beans:property>
	</beans:bean>

	<beans:bean id="loginHistoryService" class="com.legendshop.business.service.impl.LoginHistoryServiceImpl">
		<beans:property name="jdbcTemplate" ref="jdbcTemplate"></beans:property>
		<beans:property name="loginHistoryDao" ref="loginHistoryDao"></beans:property>
		<beans:property name="threadPoolExecutor" ref="threadPoolExecutor"></beans:property>
	</beans:bean>

	<beans:bean id="loginHistoryDao" class="com.legendshop.business.dao.impl.LoginHistoryDaoImpl" parent="baseDao">
	</beans:bean>

	<beans:bean id="validateCodeAuthenticationFilter" class="com.legendshop.business.service.ValidateCodeUsernamePasswordAuthenticationFilter">
		<beans:property name="filterProcessesUrl" value="/admin/j_spring_security_check"></beans:property>
		<beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></beans:property>
		<beans:property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"></beans:property>
		<beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
		<beans:property name="loginHistoryService" ref="loginHistoryService"></beans:property>
		<beans:property name="basketDao" ref="basketDao"></beans:property>
		<beans:property name="supportSSO" value="false"></beans:property>
	</beans:bean>

	<beans:bean id="loginLogAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/index"></beans:property>
		<beans:property name="redirectStrategy" ref="originUrlRedirectStrategy"></beans:property>
	</beans:bean>

	<beans:bean id="originUrlRedirectStrategy" class="com.legendshop.core.security.OriginUrlRedirectStrategy">
	</beans:bean>

	<beans:bean id="simpleUrlAuthenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/p/login?error=true"></beans:property>
	</beans:bean>

	<beans:bean id="loginService" class="com.legendshop.business.newservice.LoginServiceImpl" parent="validateCodeAuthenticationFilter">
	</beans:bean>
</beans:beans>
