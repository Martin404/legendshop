<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd" default-lazy-init="true">
	   
	<!-- 属性文件读入 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- JDBC访问的用户名、密码等 -->
				<value>classpath*:config/*.properties</value>
			</list>
		</property>
	</bean>
	<!-- oracle CLOB 处理 
	<bean id="nativeJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor" />
	<bean id="oracleLobHandler"
		class="org.springframework.jdbc.support.lob.OracleLobHandler"
		lazy-init="true">
		<property name="nativeJdbcExtractor">
			<ref local="nativeJdbcExtractor" />
		</property>
	</bean>
	-->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="PageProvider"
		class="com.legendshop.core.page.PageProviderImpl" scope="prototype" />
		
	<bean id="SimplePageProvider"
		class="com.legendshop.core.page.SimplePageProviderImpl"
		scope="prototype" />
		
    <!-- 以message:开头则查找properties文件 -->
	<bean id="codeTablesCache"
		class="com.legendshop.business.service.impl.MapCodeTablesCache">
		<property name="baseDao" ref="baseDao" />
	</bean>
	<!-- 
	<bean id="dataSource"
      class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName">
         <value>${jdbc.datasource}</value> 
      </property>
    </bean>
 	-->
 	 	<bean id="dataSource" class="com.legendshop.core.datasource.RefreshableDataSource">
			<property name="dataSource" ref="proxoolDataSource"></property>
		</bean>
 	
 	<bean id="proxoolDataSource"
		class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver"><value>${jdbc.driverClassName}</value></property>
		<property name="driverUrl"><value>${jdbc.url}</value></property>
		<property name="user"><value>${jdbc.username}</value></property>
		<property name="password"><value>${jdbc.password}</value></property>
		<property name="alias"><value>${alias}</value></property>
		<property name="prototypeCount"><value>${prototypeCount}</value></property>
		<property name="maximumConnectionCount"><value>${maximumConnectionCount}</value></property>
		<property name="minimumConnectionCount"><value>${minimumConnectionCount}</value></property>
		<property name="trace"><value>${trace}</value></property>
		<property name="verbose"><value>${verbose}</value></property>
		<property name="testBeforeUse"><value>true</value></property>
		<!--
		<property name="testAfterUse"><value>true</value></property>
		 -->
 		<property name="houseKeepingSleepTime"><value>60000</value></property>
		<property name="houseKeepingTestSql"><value>SELECT CURRENT_DATE</value></property>
	</bean>
 
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				 <!--	org.hibernate.dialect.OracleDialect -->
				</prop>
				 <!--
				<prop key="hibernate.query.factory_class">
					org.hibernate.hql.ast.ASTQueryTranslatorFactory
				</prop>
				-->
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
				<prop key="hibernate.show_sql">${SHOW_SQL}</prop>
				<!-- 
				<prop key="hibernate.format_sql">true</prop>
				 -->
				<prop key="jdbc.fetch_size">50</prop>
				<prop key="max_fetch_depth">50</prop>
				<prop key="jdbc.batch_size">50</prop>
				<prop key="hibernate.cache.use_query_cache">fasle</prop>
				<!--  -->
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				
				<!--  打开hibernate统计功能，我们测试中使用hibernate的统计类
					<prop key="hibernate.generate_statistics">true</prop>
				 -->
				<!--  最优化二级缓存
					<prop key="hibernate.cache.use_structured_entries">true</prop>-->
				<!-- <prop key="hibernate.cache.provider_class">org.hibernate.cache.SingletonEhCacheProvider</prop> -->
				<prop key="hibernate.cache.provider_class">
					org.hibernate.cache.EhCacheProvider
				</prop>
			</props>
		</property>
		<!-- oracle CLOB 处理 
		<property name="lobHandler">
			<ref bean="oracleLobHandler" />
		</property>
		-->
		<property name="mappingLocations">
			<list>
				<value>
					classpath*:/com/legendshop/model/entity/*.hbm.xml
				</value>
			</list>
		</property>
	</bean>

	<bean id="baseDao" class="com.legendshop.core.dao.impl.BaseDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
		<property name="cache">
			<value>false</value>
		</property>
		<property name="obejctCache" ref="shopDetailCache"></property>
	</bean>
	
	<bean id="hibernateTemplate"
		class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
		<property name="cacheQueries">
			<value>false</value>
		</property>
	</bean>
</beans>